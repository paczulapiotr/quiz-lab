// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Quiz.Master.Persistance;

#nullable disable

namespace Quiz.Master.Migrations
{
    [DbContext(typeof(QuizDbContext))]
    partial class QuizDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Quiz.Master.Persistance.Models.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<Guid?>("CurrentMiniGameId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FinishedAt")
                        .HasColumnType("TEXT");

                    b.Property<uint>("GameSize")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CurrentMiniGameId")
                        .IsUnique();

                    b.ToTable("Games", (string)null);
                });

            modelBuilder.Entity("Quiz.Master.Persistance.Models.MiniGameDefinition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Archived")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ArchivedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("DefinitionJsonData")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MiniGameDefinitions", (string)null);
                });

            modelBuilder.Entity("Quiz.Master.Persistance.Models.MiniGameInstance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MiniGameDefinitionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("StateJsonData")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("MiniGameDefinitionId");

                    b.ToTable("MiniGameInstances", (string)null);
                });

            modelBuilder.Entity("Quiz.Master.Persistance.Models.MiniGameInstanceScore", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MiniGameInstanceId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PlayerId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MiniGameInstanceId");

                    b.HasIndex("PlayerId");

                    b.ToTable("MiniGameInstanceScores", (string)null);
                });

            modelBuilder.Entity("Quiz.Master.Persistance.Models.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Players", (string)null);
                });

            modelBuilder.Entity("Quiz.Master.Persistance.Models.Game", b =>
                {
                    b.HasOne("Quiz.Master.Persistance.Models.MiniGameInstance", "CurrentMiniGame")
                        .WithOne()
                        .HasForeignKey("Quiz.Master.Persistance.Models.Game", "CurrentMiniGameId");

                    b.Navigation("CurrentMiniGame");
                });

            modelBuilder.Entity("Quiz.Master.Persistance.Models.MiniGameInstance", b =>
                {
                    b.HasOne("Quiz.Master.Persistance.Models.Game", "Game")
                        .WithMany("MiniGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quiz.Master.Persistance.Models.MiniGameDefinition", "MiniGameDefinition")
                        .WithMany()
                        .HasForeignKey("MiniGameDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("MiniGameDefinition");
                });

            modelBuilder.Entity("Quiz.Master.Persistance.Models.MiniGameInstanceScore", b =>
                {
                    b.HasOne("Quiz.Master.Persistance.Models.MiniGameInstance", "MiniGameInstance")
                        .WithMany("PlayerScores")
                        .HasForeignKey("MiniGameInstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Quiz.Master.Persistance.Models.Player", "Player")
                        .WithMany("Scores")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MiniGameInstance");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Quiz.Master.Persistance.Models.Player", b =>
                {
                    b.HasOne("Quiz.Master.Persistance.Models.Game", "Game")
                        .WithMany("Players")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Quiz.Master.Persistance.Models.Game", b =>
                {
                    b.Navigation("MiniGames");

                    b.Navigation("Players");
                });

            modelBuilder.Entity("Quiz.Master.Persistance.Models.MiniGameInstance", b =>
                {
                    b.Navigation("PlayerScores");
                });

            modelBuilder.Entity("Quiz.Master.Persistance.Models.Player", b =>
                {
                    b.Navigation("Scores");
                });
#pragma warning restore 612, 618
        }
    }
}
